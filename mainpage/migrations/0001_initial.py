# Generated by Django 5.0.2 on 2025-06-11 08:45

import django.db.models.deletion
import mainpage.models.studentorg
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accreditation',
            fields=[
                ('accreditation_id', models.AutoField(primary_key=True, serialize=False)),
                ('organization', models.CharField(choices=[('SSG', 'SSG'), ('FSTLP', 'FSTLP'), ('SI++', 'SI++'), ('THE EQUATIONERS', 'THE EQUATIONERS'), ('TECHNOCRATS', 'TECHNOCRATS')], max_length=20)),
                ('letter_of_intent', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('list_of_officers', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('certificate_of_registration', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('list_of_members', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('accomplishment_report', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('calendar_of_activities', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('financial_statement', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('bank_passbook', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('inventory_of_properties', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('organization_bylaws', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('faculty_adviser_appointment', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('other_documents', models.FileField(upload_to='accreditation/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('declined', 'Declined')], default='pending', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='AdminLogin',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_username', models.CharField(max_length=50)),
                ('admin_password', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Adviser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Adviser_profile_picture', models.FileField(upload_to='Adviser_Profile/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('surname', models.CharField(max_length=100)),
                ('firstname', models.CharField(max_length=100)),
                ('middlename', models.CharField(max_length=100)),
                ('department', models.CharField(choices=[('BSIT', 'BSIT'), ('BSIE', 'BSIE'), ('BIT', 'BIT')], default='', max_length=50)),
                ('organization', models.CharField(choices=[('SSG', 'SSG'), ('FSTLP', 'FSTLP'), ('SI++', 'SI++'), ('THE EQUATIONERS', 'THE EQUATIONERS'), ('TECHNOCRATS', 'TECHNOCRATS')], max_length=20)),
                ('date_employed', models.DateField()),
                ('number_of_years', models.PositiveIntegerField()),
                ('town_address', models.CharField(max_length=190)),
                ('home_address', models.CharField(max_length=190)),
                ('cell1', models.CharField(max_length=15)),
                ('cell2', models.CharField(blank=True, max_length=15, null=True)),
                ('position', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('place_of_birth', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField()),
                ('nationality', models.CharField(max_length=50)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('civil_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed'), ('Separated', 'Separated'), ('Divorced', 'Divorced')], max_length=10)),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('distinguishing_mark', models.CharField(blank=True, max_length=100, null=True)),
                ('hobbies', models.CharField(blank=True, max_length=100, null=True)),
                ('special_talent', models.CharField(blank=True, max_length=100, null=True)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('father_address', models.CharField(blank=True, max_length=190, null=True)),
                ('father_mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_address', models.CharField(blank=True, max_length=190, null=True)),
                ('mother_mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('spouse_name', models.CharField(blank=True, max_length=100, null=True)),
                ('spouse_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('spouse_address', models.CharField(blank=True, max_length=190, null=True)),
                ('spouse_mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('first_institution', models.CharField(blank=True, max_length=100, null=True)),
                ('first_address', models.CharField(blank=True, max_length=190, null=True)),
                ('first_degree_level', models.CharField(blank=True, max_length=100, null=True)),
                ('first_date', models.DateField(blank=True, null=True)),
                ('second_institution', models.CharField(blank=True, max_length=100, null=True)),
                ('second_address', models.CharField(blank=True, max_length=190, null=True)),
                ('second_degree_level', models.CharField(blank=True, max_length=100, null=True)),
                ('second_date', models.DateField(blank=True, null=True)),
                ('third_institution', models.CharField(blank=True, max_length=100, null=True)),
                ('third_address', models.CharField(blank=True, max_length=190, null=True)),
                ('third_degree_level', models.CharField(blank=True, max_length=100, null=True)),
                ('third_date', models.DateField(blank=True, null=True)),
                ('fourth_institution', models.CharField(blank=True, max_length=100, null=True)),
                ('fourth_address', models.CharField(blank=True, max_length=190, null=True)),
                ('fourth_degree_level', models.CharField(blank=True, max_length=100, null=True)),
                ('fourth_date', models.DateField(blank=True, null=True)),
                ('fifth_institution', models.CharField(blank=True, max_length=100, null=True)),
                ('fifth_address', models.CharField(blank=True, max_length=190, null=True)),
                ('fifth_degree_level', models.CharField(blank=True, max_length=100, null=True)),
                ('fifth_date', models.DateField(blank=True, null=True)),
                ('work_institution1', models.CharField(blank=True, max_length=100, null=True)),
                ('work_position1', models.CharField(blank=True, max_length=100, null=True)),
                ('work_period1', models.CharField(blank=True, max_length=100, null=True)),
                ('work_institution2', models.CharField(blank=True, max_length=100, null=True)),
                ('work_position2', models.CharField(blank=True, max_length=100, null=True)),
                ('work_period2', models.CharField(blank=True, max_length=100, null=True)),
                ('work_institution3', models.CharField(blank=True, max_length=100, null=True)),
                ('work_position3', models.CharField(blank=True, max_length=100, null=True)),
                ('work_period3', models.CharField(blank=True, max_length=100, null=True)),
                ('work_institution4', models.CharField(blank=True, max_length=100, null=True)),
                ('work_position4', models.CharField(blank=True, max_length=100, null=True)),
                ('work_period4', models.CharField(blank=True, max_length=100, null=True)),
                ('work_institution5', models.CharField(blank=True, max_length=100, null=True)),
                ('work_position5', models.CharField(blank=True, max_length=100, null=True)),
                ('work_period5', models.CharField(blank=True, max_length=100, null=True)),
                ('org_name1', models.CharField(blank=True, max_length=100, null=True)),
                ('org_position1', models.CharField(blank=True, max_length=100, null=True)),
                ('org_period1', models.CharField(blank=True, max_length=100, null=True)),
                ('org_name2', models.CharField(blank=True, max_length=100, null=True)),
                ('org_position2', models.CharField(blank=True, max_length=100, null=True)),
                ('org_period2', models.CharField(blank=True, max_length=100, null=True)),
                ('advisory1', models.CharField(blank=True, max_length=100, null=True)),
                ('inclusive_advisory1', models.DateField(blank=True, null=True)),
                ('advisory2', models.CharField(blank=True, max_length=100, null=True)),
                ('inclusive_advisory2', models.DateField(blank=True, null=True)),
                ('advisory3', models.CharField(blank=True, max_length=100, null=True)),
                ('inclusive_advisory3', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('declined', 'Declined')], default='pending', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='FileUploadTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='FinancialStatement',
            fields=[
                ('financial_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('purpose', models.CharField(max_length=255)),
                ('source_of_funds', models.CharField(max_length=255)),
                ('org', models.CharField(choices=[('SSG', 'SSG'), ('FSTLP', 'FSTLP'), ('SI++', 'SI++'), ('THE EQUATIONERS', 'THE EQUATIONERS'), ('TECHNOCRATS', 'TECHNOCRATS')], default='', max_length=15)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('remarks', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('declined', 'Declined')], default='pending', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='IndividualProfileBasicInfo',
            fields=[
                ('individualProfileID', models.AutoField(primary_key=True, serialize=False)),
                ('studentPhoto', models.FileField(upload_to='media/studentPhoto')),
                ('nickName', models.CharField(max_length=255)),
                ('yearlvl', models.IntegerField()),
                ('section', models.CharField(max_length=255)),
                ('major', models.CharField(max_length=255)),
                ('dateFilled', models.DateField()),
                ('studentType', models.CharField(choices=[('newStudent', 'New Student'), ('returnee', 'Returnee'), ('shifter', 'Shifter'), ('transferee', 'Transferee'), ('alspasses', 'ALS Passer'), ('foreignstudent', 'Foreign Student')], max_length=30)),
                ('curriculumtype', models.CharField(choices=[('oldsecondary', 'Old Secondary Curriculum Graduate'), ('seniorhigh', 'Senior High School Graduate')], max_length=50)),
                ('track', models.CharField(default='', max_length=255)),
                ('age', models.IntegerField()),
                ('religion', models.CharField(max_length=255)),
                ('height', models.DecimalField(decimal_places=2, max_digits=10)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('birthOrderAmongSiblings', models.CharField(max_length=10)),
                ('sexualOrientation', models.CharField(choices=[('heterosexual', 'Heterosexual'), ('gay', 'Gay'), ('lesbian', 'Lesbian'), ('others', 'Others')], max_length=15)),
                ('civilStatus', models.CharField(max_length=255)),
                ('citizenship', models.CharField(max_length=255)),
                ('dateOfBirth', models.DateField()),
                ('placeOfBirth', models.CharField(max_length=255)),
                ('currentAddress', models.CharField(max_length=255)),
                ('permanentAddress', models.CharField(max_length=255)),
                ('landlineNo', models.CharField(max_length=255)),
                ('mobileNo', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('languagesDialectsSpokenAtHome', models.CharField(max_length=255)),
                ('languagesDialectsMostFluentIn', models.CharField(max_length=255)),
                ('livingWith', models.CharField(choices=[('parents', 'Parents'), ('fatheronly', 'Father Only'), ('motheronly', 'Mother Only'), ('spouse', 'Spouse'), ('relative', 'Relative'), ('employer', 'Employer'), ('others', 'Others')], max_length=15)),
                ('livingSpecify', models.CharField(default='', max_length=255)),
                ('placeOfLiving', models.CharField(choices=[('dormitory', 'Dormitory'), ('boardinghouse', 'Boarding House'), ('ownhouse', 'Own House'), ('others', ' Others')], max_length=20)),
                ('placeOfLivingOthers', models.CharField(default='', max_length=255)),
                ('fatherName', models.CharField(max_length=255)),
                ('motherName', models.CharField(max_length=255)),
                ('fatherDateOfBirth', models.DateField()),
                ('motherDateOfBirth', models.DateField()),
                ('fatherAddress', models.CharField(max_length=255)),
                ('motherAddress', models.CharField(max_length=255)),
                ('fatherLandline', models.CharField(max_length=255)),
                ('motherLandLine', models.CharField(max_length=255)),
                ('fatherMobilePhone', models.CharField(max_length=255)),
                ('motherMobilePhone', models.CharField(max_length=255)),
                ('fatherEducationLevel', models.CharField(choices=[('elementarylevel', 'Elementary Level'), ('elementarygraduate', 'Elementary Graduate'), ('highschoollevel', 'High School Level'), ('highschoolgraduate', 'High School Graduate'), ('collegelevel', 'College Level'), ('collegegraduate', 'College Graduate'), ('postgraduate', 'Post Graduate')], max_length=30)),
                ('motherEducationLevel', models.CharField(choices=[('elementarylevel', 'Elementary Level'), ('elementarygraduate', 'Elementary Graduate'), ('highschoollevel', 'High School Level'), ('highschoolgraduate', 'High School Graduate'), ('collegelevel', 'College Level'), ('collegegraduate', 'College Graduate'), ('postgraduate', 'Post Graduate')], max_length=30)),
                ('fatherCTU', models.BooleanField()),
                ('motherCTU', models.BooleanField()),
                ('sourceOfIncome', models.CharField(choices=[('onlyfatherworks', 'Only father works'), ('onlymotherworks', 'Only mother works'), ('bothparentswork', 'Both parents work'), ('siblingswork', 'Sibling(s) work'), ('familyownedbusiness', 'Family owned business'), ('relatives', 'Relative(s)')], max_length=30)),
                ('sourceOfIncomeSpecify', models.CharField(default='', max_length=255)),
                ('fatherOccupation', models.CharField(choices=[('agriculture', 'Agriculture, Food and Natural Resources'), ('architecture', 'Architecture, Design and Construction'), ('businessmanagement', 'Business Management, Marketing and Sales'), ('clerical', 'Clerical and Customer Service'), ('education', 'Education and Training'), ('health', 'Health'), ('law', 'Law, Public Safety Corrections and Security'), ('manufacturing', 'Manufacturing'), ('science', 'Science, Technology, Engineering'), ('maintenance', 'Maintenance and Services'), ('transportation', 'Transportation, Distribution and Logistics'), ('unemployed', 'Unemployed'), ('others', 'Others')], max_length=255)),
                ('fatherOtherOccupation', models.CharField(default='', max_length=255)),
                ('motherOccupation', models.CharField(choices=[('agriculture', 'Agriculture, Food and Natural Resources'), ('architecture', 'Architecture, Design and Construction'), ('businessmanagement', 'Business Management, Marketing and Sales'), ('clerical', 'Clerical and Customer Service'), ('education', 'Education and Training'), ('health', 'Health'), ('law', 'Law, Public Safety Corrections and Security'), ('manufacturing', 'Manufacturing'), ('science', 'Science, Technology, Engineering'), ('maintenance', 'Maintenance and Services'), ('transportation', 'Transportation, Distribution and Logistics'), ('unemployed', 'Unemployed'), ('others', 'Others')], max_length=255)),
                ('motherOtherOccupation', models.CharField(default='', max_length=255)),
                ('familyEarningInaMonth', models.CharField(choices=[('below1000', 'below P 1,000'), ('1000-5000', 'P 1,000 - P 5,000'), ('11000-15000', 'P 11,000 - P 15,000'), ('16000-20000', 'P 16,000 - P 20,000'), ('21000-25000', 'P 21,000 - P 25,000'), ('26000-30000', 'P 26,000 - P 30,000'), ('31000-40000', 'P 31,000 - P 40,000'), ('41000andabove', 'P 41,000 and above')], max_length=30)),
                ('parentStatus', models.CharField(choices=[('together&married', 'Living together and legally married'), ('together&notmarried', 'Living together and not legally married'), ('marriedbutseparate', 'Legally married but living separetely'), ('mohterofw', 'Mother is OFW'), ('fatherofw', 'Father is OFW'), ('fatherwanother', 'Father w/ Another Partner'), ('motherwanother', 'Mother w/ Another Partner')], max_length=50)),
                ('siblingsName', models.JSONField()),
                ('siblingsAge', models.JSONField()),
                ('siblingsSchoolWork', models.JSONField()),
                ('personInCaseofEmergency', models.CharField(max_length=255)),
                ('personInCaseofEmergencyRelationship', models.CharField(max_length=255)),
                ('personInCaseofEmergencyAddress', models.CharField(max_length=255)),
                ('personInCaseofEmergencyLandline', models.CharField(default='', max_length=255)),
                ('personInCaseofEmergencyMobileNo', models.CharField(max_length=255)),
                ('disabilies', models.CharField(max_length=255)),
                ('allergies', models.CharField(max_length=255)),
                ('bloodType', models.CharField(choices=[('O-', 'O negative'), ('O+', 'O positive'), ('A-', 'A negative'), ('A+', 'A positive'), ('B-', 'B negative'), ('B+', 'B possitive'), ('AB-', 'AB negative'), ('AB+', 'AB positive'), ('unknown', 'Unknown')], max_length=10)),
                ('elementaryName', models.CharField(max_length=255)),
                ('elementaryType', models.BooleanField()),
                ('elementaryAwardsRecieved', models.CharField(max_length=255)),
                ('elementaryYearGraduated', models.IntegerField()),
                ('seniorHighSchoolName', models.CharField(max_length=255)),
                ('seniorHighSchoolType', models.BooleanField()),
                ('seniorHighSchoolAwardsRecieved', models.CharField(max_length=255)),
                ('seniorHighSchoolYearGraduated', models.IntegerField()),
                ('collegeName', models.CharField(default='', max_length=255)),
                ('collegeAwardsRecieved', models.CharField(default='', max_length=255)),
                ('collegeYearGraduated', models.IntegerField(default=0)),
                ('schoolLeaver', models.BooleanField()),
                ('schoolLeaverWhy', models.CharField(max_length=255)),
                ('lastEducationAttainment', models.CharField(max_length=255)),
                ('finaciallySupporting', models.CharField(choices=[('parents', 'Parents'), ('spouse', 'Spouse'), ('relatives', 'Relatives'), ('selfsupporting', 'Self-supporting'), ('scholarship', 'Scholarship')], max_length=20)),
                ('typeOfScholarship', models.CharField(choices=[('private', ' Scholarship by private institution'), ('government', 'Government Scholarship'), ('organizations', ' Scholarships granted by organizations within CTU')], max_length=100)),
                ('specifyScholarship', models.CharField(default='', max_length=255)),
                ('nameOfOrganization', models.JSONField()),
                ('inOutSchool', models.JSONField()),
                ('positionTitle', models.JSONField()),
                ('inclusiveYears', models.JSONField()),
                ('specialSkill', models.CharField(max_length=255)),
                ('goals', models.CharField(max_length=255)),
                ('presentConcerns', models.CharField(max_length=255)),
                ('describeYouBest', models.JSONField()),
                ('describeYouBestOther', models.CharField(default='', max_length=255)),
                ('decisionForTheCourse', models.CharField(choices=[('self', 'Self'), ('parents', 'Parent(s)'), ('brothersister', 'Brother/Sister'), ('sponsorsscholarship', 'Sponsors/Scholarship'), ('relatives', 'Relatives'), ('friends', 'Friends')], max_length=40)),
                ('specifyTheDecision', models.CharField(max_length=255)),
                ('doYouPlanToWork', models.BooleanField()),
                ('specifyIfNo', models.CharField(max_length=255)),
                ('possibleFactors', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Officer_profile_picture', models.FileField(upload_to='Officer_Profile/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('surname', models.CharField(max_length=100)),
                ('firstname', models.CharField(max_length=100)),
                ('middlename', models.CharField(max_length=100)),
                ('course', models.CharField(choices=[('BSIT', 'BSIT'), ('BSIE', 'BSIE'), ('BIT-CT', 'BIT-COMPTECH'), ('BIT-GARMENTS', 'BIT-GARMENTS'), ('BIT-AUTOMOTIVE', 'BIT-AUTOMOTIVE'), ('BIT-DRAFTING', 'BIT-DRAFTING'), ('BIT-ELECTRONICS', 'BIT-ELECTRONICS'), ('BEED', 'BEED'), ('BSED-MATH', 'BSED-MATH'), ('BTLED', 'BTLED'), ('BSF', 'BSF'), ('BSA', 'BSA'), ('BAL', 'BAL'), ('BAEL', 'BAEL'), ('BS-PSYCHOLOGY', 'BS-PSYCHOLOGY'), ('BSHM', 'BSHM'), ('BSTM', 'BSTM')], default='', max_length=50)),
                ('year', models.CharField(choices=[('1st', '1st'), ('2nd', '2nd'), ('3rd', '3rd'), ('4th', '4th'), ('Irregular', 'Irregular')], default='', max_length=50)),
                ('mobile_number', models.CharField(max_length=15)),
                ('position', models.CharField(max_length=100)),
                ('organization', models.CharField(choices=[('SSG', 'SSG'), ('FSTLP', 'FSTLP'), ('SI++', 'SI++'), ('THE EQUATIONERS', 'THE EQUATIONERS'), ('TECHNOCRATS', 'TECHNOCRATS')], max_length=30)),
                ('town_address', models.CharField(max_length=200)),
                ('home_address', models.CharField(max_length=200)),
                ('age', models.PositiveIntegerField()),
                ('place_of_birth', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('nationality', models.CharField(max_length=50)),
                ('civil_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed'), ('Separated', 'Separated'), ('Divorced', 'Divorced')], max_length=10)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('height', models.FloatField()),
                ('distinguishing_mark', models.CharField(blank=True, max_length=200, null=True)),
                ('weight', models.FloatField()),
                ('hobbies', models.CharField(blank=True, max_length=200, null=True)),
                ('special_talent', models.CharField(blank=True, max_length=200, null=True)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('father_address', models.CharField(blank=True, max_length=200, null=True)),
                ('father_mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_address', models.CharField(blank=True, max_length=200, null=True)),
                ('mother_mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('guardian_name', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_address', models.CharField(blank=True, max_length=200, null=True)),
                ('guardian_mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('tertiary_institution', models.CharField(blank=True, max_length=200, null=True)),
                ('tertiary_address', models.CharField(blank=True, max_length=200, null=True)),
                ('tertiary_degree_level', models.CharField(blank=True, max_length=100, null=True)),
                ('tertiary_date', models.DateField(blank=True, null=True)),
                ('secondary_institution', models.CharField(blank=True, max_length=200, null=True)),
                ('secondary_address', models.CharField(blank=True, max_length=200, null=True)),
                ('secondary_degree_level', models.CharField(blank=True, max_length=100, null=True)),
                ('secondary_date', models.DateField(blank=True, null=True)),
                ('elementary_institution', models.CharField(blank=True, max_length=200, null=True)),
                ('elementary_address', models.CharField(blank=True, max_length=200, null=True)),
                ('elementary_degree_level', models.CharField(blank=True, max_length=100, null=True)),
                ('elementary_date', models.DateField(blank=True, null=True)),
                ('membership_position1', models.CharField(blank=True, max_length=100, null=True)),
                ('membership_organization1', models.CharField(blank=True, max_length=200, null=True)),
                ('membership_date1', models.DateField(blank=True, null=True)),
                ('membership_position2', models.CharField(blank=True, max_length=100, null=True)),
                ('membership_organization2', models.CharField(blank=True, max_length=200, null=True)),
                ('membership_date2', models.DateField(blank=True, null=True)),
                ('membership_position3', models.CharField(blank=True, max_length=100, null=True)),
                ('membership_organization3', models.CharField(blank=True, max_length=200, null=True)),
                ('membership_date3', models.DateField(blank=True, null=True)),
                ('membership_position4', models.CharField(blank=True, max_length=100, null=True)),
                ('membership_organization4', models.CharField(blank=True, max_length=200, null=True)),
                ('membership_date4', models.DateField(blank=True, null=True)),
                ('membership_position5', models.CharField(blank=True, max_length=100, null=True)),
                ('membership_organization5', models.CharField(blank=True, max_length=200, null=True)),
                ('membership_date5', models.DateField(blank=True, null=True)),
                ('seminar_title1', models.CharField(blank=True, max_length=200, null=True)),
                ('seminar_date1', models.DateField(blank=True, null=True)),
                ('seminar_title2', models.CharField(blank=True, max_length=200, null=True)),
                ('seminar_date2', models.DateField(blank=True, null=True)),
                ('seminar_title3', models.CharField(blank=True, max_length=200, null=True)),
                ('seminar_date3', models.DateField(blank=True, null=True)),
                ('seminar_title4', models.CharField(blank=True, max_length=200, null=True)),
                ('seminar_date4', models.DateField(blank=True, null=True)),
                ('seminar_title5', models.CharField(blank=True, max_length=200, null=True)),
                ('seminar_date5', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('declined', 'Declined')], default='pending', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='OfficerLogin',
            fields=[
                ('student_id', models.IntegerField(primary_key=True, serialize=False)),
                ('student_lname', models.CharField(max_length=100)),
                ('student_fname', models.CharField(max_length=100)),
                ('student_mname', models.CharField(max_length=100)),
                ('course', models.CharField(choices=[('BSIT', 'BSIT'), ('BSIE', 'BSIE'), ('BIT-CT', 'BIT-COMPTECH'), ('BIT-GARMENTS', 'BIT-GARMENTS'), ('BIT-AUTOMOTIVE', 'BIT-AUTOMOTIVE'), ('BIT-DRAFTING', 'BIT-DRAFTING'), ('BIT-ELECTRONICS', 'BIT-ELECTRONICS'), ('BEED', 'BEED'), ('BSED-MATH', 'BSED-MATH'), ('BTLED', 'BTLED'), ('BSF', 'BSF'), ('BSA', 'BSA'), ('BAL', 'BAL'), ('BAEL', 'BAEL'), ('BS-PSYCHOLOGY', 'BS-PSYCHOLOGY'), ('BSHM', 'BSHM'), ('BSTM', 'BSTM')], default='', max_length=50)),
                ('officer_position', models.CharField(max_length=200)),
                ('organization', models.CharField(choices=[('SSG', 'SSG'), ('FSTLP', 'FSTLP'), ('SI++', 'SI++'), ('THE EQUATIONERS', 'THE EQUATIONERS'), ('TECHNOCRATS', 'TECHNOCRATS')], max_length=20)),
                ('year_lvl', models.CharField(choices=[('1st', '1st'), ('2nd', '2nd'), ('3rd', '3rd'), ('4th', '4th'), ('Irregular', 'Irregular')], max_length=10)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('objective', models.CharField(max_length=255)),
                ('activities', models.TextField()),
                ('org', models.CharField(choices=[('SSG', 'SSG'), ('FSTLP', 'FSTLP'), ('SI++', 'SI++'), ('THE EQUATIONERS', 'THE EQUATIONERS'), ('TECHNOCRATS', 'TECHNOCRATS')], default='', max_length=15)),
                ('target', models.CharField(choices=[('Q1', 'Q1'), ('Q2', 'Q2'), ('Q3', 'Q3'), ('Q4', 'Q4')], max_length=2)),
                ('involved_officer', models.CharField(max_length=100)),
                ('p_budget', models.DecimalField(decimal_places=2, default='0', max_digits=15)),
                ('expected_output', models.TextField()),
                ('actual_accomplishment', models.FileField(upload_to='projects/', validators=[mainpage.models.studentorg.validate_file_extension])),
                ('remarks', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('declined', 'Declined')], default='pending', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='studentInfo',
            fields=[
                ('studID', models.IntegerField(primary_key=True, serialize=False)),
                ('lrn', models.CharField(max_length=12)),
                ('lastname', models.CharField(max_length=100)),
                ('firstname', models.CharField(max_length=100)),
                ('middlename', models.CharField(max_length=50)),
                ('degree', models.CharField(max_length=150)),
                ('yearlvl', models.CharField(max_length=10)),
                ('sex', models.CharField(max_length=10)),
                ('emailadd', models.EmailField(max_length=254)),
                ('contact', models.CharField(max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name='TestArray',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('myarray', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='IntakeInverView',
            fields=[
                ('individualProfileId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='mainpage.individualprofilebasicinfo')),
                ('individualActivity', models.JSONField()),
                ('individualDateAccomplished', models.JSONField()),
                ('individualRemarks', models.JSONField()),
                ('appraisalTest', models.JSONField()),
                ('appraisalDateTaken', models.JSONField()),
                ('appraisalDateInterpreted', models.JSONField()),
                ('appraisalRemarks', models.JSONField()),
                ('counselingType', models.JSONField()),
                ('counselingDate', models.JSONField()),
                ('counselingConcern', models.JSONField()),
                ('counselingRemarks', models.JSONField()),
                ('followActivity', models.JSONField()),
                ('followDate', models.JSONField()),
                ('followRemarks', models.JSONField()),
                ('informationActivity', models.JSONField()),
                ('informationDate', models.JSONField()),
                ('informationRemarks', models.JSONField()),
                ('counsultationActivity', models.JSONField()),
                ('counsultationDate', models.JSONField()),
                ('counsultationRemarks', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='OjtAssessment',
            fields=[
                ('OjtRequestID', models.AutoField(primary_key=True, serialize=False)),
                ('dateRecieved', models.DateField()),
                ('schoolYear', models.CharField(choices=[('2020-2021', '2020-2021'), ('2021-2022', '2021-2022'), ('2022-2023', '2022-2023'), ('2023-2024', '2023-2024'), ('2024-2025', '2024-2025'), ('2025-2026', '2025-2026'), ('2026-2027', '2026-2027'), ('2027-2028', '2027-2028'), ('2028-2029', '2028-2029'), ('2029-2030', '2029-2030'), ('2030-2031', '2030-2031'), ('2031-2032', '2031-2032'), ('2032-2033', '2032-2033'), ('2033-2034', '2033-2034'), ('2034-2035', '2034-2035'), ('2035-2036', '2035-2036'), ('2036-2037', '2036-2037'), ('2037-2038', '2037-2038'), ('2038-2039', '2038-2039'), ('2039-2040', '2039-2040'), ('2040-2041', '2040-2041')], max_length=10)),
                ('status', models.CharField(choices=[('Accepted', 'Accepted'), ('Declined', 'Declined'), ('Pending', 'Pending'), ('Expired', 'Expired')], default='Pending', max_length=10)),
                ('dateAccepted', models.DateField()),
                ('emailadd', models.EmailField(max_length=254)),
                ('studentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainpage.studentinfo')),
            ],
        ),
        migrations.AddField(
            model_name='individualprofilebasicinfo',
            name='studentId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainpage.studentinfo'),
        ),
        migrations.CreateModel(
            name='exit_interview_db',
            fields=[
                ('exitinterviewId', models.AutoField(primary_key=True, serialize=False)),
                ('dateRecieved', models.DateField()),
                ('scheduled_date', models.DateField()),
                ('scheduled_time', models.CharField(choices=[('8-9', '8:00 AM - 9:00 AM'), ('9-10', '9:00 AM - 10:00 AM'), ('10-11', '10:00 AM-11:00 AM'), ('11-12', '11:00 AM -12:00 PM'), ('1-2', '1:00 PM - 2:00 PM'), ('2-3', '2:00 PM - 3:00 PM'), ('3-4', '3:00 PM - 4:00 PM'), ('4-5', '4:00 PM - 5:00 PM')], max_length=15)),
                ('emailadd', models.EmailField(max_length=254)),
                ('date', models.DateField()),
                ('dateEnrolled', models.DateField()),
                ('reasonForLeaving', models.CharField(max_length=255)),
                ('satisfiedWithAcadamic', models.BooleanField(default=False)),
                ('feedbackWithAcademic', models.CharField(max_length=255)),
                ('satisfiedWithSocial', models.BooleanField(default=False)),
                ('feedbackWithSocial', models.CharField(max_length=255)),
                ('satisfiedWithServices', models.BooleanField(default=False)),
                ('feedbackWithServices', models.CharField(max_length=255)),
                ('contributedToDecision', models.JSONField()),
                ('intendedMajor', models.CharField(max_length=255)),
                ('majorEvent', models.CharField(max_length=255)),
                ('firstConsider', models.CharField(max_length=255)),
                ('whatCondition', models.CharField(max_length=255)),
                ('recommend', models.BooleanField(default=False)),
                ('howSatisfied', models.CharField(choices=[('very satisfied', 'Very satisfied'), ('somewhat satisfied', 'Somewhat satisfied'), ('satisfied', 'Satisfied'), ('somewhat dissatisfied', 'Somewhat Dissatisfied'), ('very dissatisfied', 'Very Dissatisfied')], max_length=30)),
                ('planTOReturn', models.CharField(max_length=255)),
                ('accademicExperienceSatisfied', models.BooleanField(default=False)),
                ('knowAboutYourTime', models.CharField(max_length=255)),
                ('currentlyEmployed', models.BooleanField(default=False)),
                ('explainationEmployed', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Accepted', 'Accepted'), ('Declined', 'Declined'), ('Pending', 'Pending'), ('Expired', 'Expired')], default='Pending', max_length=10)),
                ('studentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainpage.studentinfo')),
            ],
        ),
        migrations.CreateModel(
            name='counseling_schedule',
            fields=[
                ('counselingID', models.AutoField(primary_key=True, serialize=False)),
                ('dateRecieved', models.DateField()),
                ('reason', models.CharField(max_length=255)),
                ('scheduled_date', models.DateField()),
                ('scheduled_time', models.CharField(choices=[('8-9', '8:00 AM - 9:00 AM'), ('9-10', '9:00 AM - 10:00 AM'), ('10-11', '10:00 AM-11:00 AM'), ('11-12', '11:00 AM -12:00 PM'), ('1-2', '1:00 PM - 2:00 PM'), ('2-3', '2:00 PM - 3:00 PM'), ('3-4', '3:00 PM - 4:00 PM'), ('4-5', '4:00 PM - 5:00 PM')], max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('status', models.CharField(choices=[('Accepted', 'Accepted'), ('Declined', 'Declined'), ('Pending', 'Pending'), ('Expired', 'Expired')], default='Pending', max_length=10)),
                ('studentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainpage.studentinfo')),
            ],
        ),
    ]
