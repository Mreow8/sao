# Generated by Django 5.0.2 on 2025-06-13 03:52

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('mainpage', '0002_liquidationcoscho_liquidationtdp_liquidationtes_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='OJTCompany',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(default='', max_length=225)),
                ('owner', models.CharField(default='', max_length=100)),
                ('position', models.CharField(default='', max_length=100)),
                ('address', models.CharField(default='', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('company_contact', models.CharField(max_length=50, null=True)),
                ('number_of_slots', models.PositiveIntegerField(default=1)),
                ('shift', models.CharField(choices=[('Day Shift', 'Day Shift'), ('Night Shift', 'Night Shift')], default='Day Shift', max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Seminar',
            fields=[
                ('seminar_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=100)),
                ('theme', models.CharField(default='', max_length=150)),
                ('date_of_event', models.DateField(default='')),
                ('image', models.FileField(blank=True, null=True, upload_to='upload/seminar_imgs')),
            ],
        ),
        migrations.CreateModel(
            name='JobPlacementAdminUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('firstname', models.CharField(default='', max_length=50)),
                ('lastname', models.CharField(default='', max_length=50)),
                ('middlename', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, related_name='admin_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='admin_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OJTRequirements',
            fields=[
                ('ojt_requirement_id', models.AutoField(primary_key=True, serialize=False)),
                ('non_disclosure', models.FileField(blank=True, upload_to='upload/ojt_requirements/')),
                ('biodata', models.FileField(blank=True, upload_to='upload/ojt_requirements/')),
                ('parents_consent', models.FileField(blank=True, upload_to='upload/ojt_requirements/')),
                ('application_letter', models.FileField(blank=True, upload_to='upload/ojt_requirements/')),
                ('medical', models.FileField(blank=True, upload_to='upload/ojt_requirements/')),
                ('moa', models.FileField(blank=True, upload_to='upload/ojt_requirements/')),
                ('endorsement', models.FileField(blank=True, upload_to='upload/ojt_requirements/')),
                ('certification', models.FileField(blank=True, upload_to='upload/ojt_requirements/')),
                ('nondis_stat', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Declined', 'Declined'), ('No file', 'No file')], default='No file', max_length=20)),
                ('biodata_stat', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Declined', 'Declined'), ('No file', 'No file')], default='No file', max_length=20)),
                ('consent_stat', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Declined', 'Declined'), ('No file', 'No file')], default='No file', max_length=20)),
                ('apl_letter_stat', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Declined', 'Declined'), ('No file', 'No file')], default='No file', max_length=20)),
                ('medical_stat', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Declined', 'Declined'), ('No file', 'No file')], default='No file', max_length=20)),
                ('moa_stat', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Declined', 'Declined'), ('No file', 'No file')], default='No file', max_length=20)),
                ('endorsement_stat', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Declined', 'Declined'), ('No file', 'No file')], default='No file', max_length=20)),
                ('cert_stat', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Declined', 'Declined'), ('No file', 'No file')], default='No file', max_length=20)),
                ('is_valid', models.BooleanField(default=True)),
                ('company_id', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='mainpage.ojtcompany')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainpage.studentinfo')),
            ],
        ),
        migrations.CreateModel(
            name='OJTStudent',
            fields=[
                ('ojt_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_started', models.DateField(auto_now=True)),
                ('duration', models.PositiveIntegerField(default=100)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mainpage.ojtcompany')),
                ('studID', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='mainpage.studentinfo')),
            ],
            options={
                'ordering': ['date_started'],
            },
        ),
        migrations.CreateModel(
            name='SeminarAttendance',
            fields=[
                ('sem_at_id', models.AutoField(primary_key=True, serialize=False)),
                ('attended', models.BooleanField(default=False)),
                ('ispending', models.BooleanField(default=False)),
                ('seminar_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainpage.seminar')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainpage.studentinfo')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionReport',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('object_id', models.CharField(default='1', max_length=30)),
                ('action', models.CharField(default='None', max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user_type', models.CharField(choices=[('Student', 'Student'), ('Admin', 'Admin')], default='Student', max_length=50)),
                ('content_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Transaction Report',
                'verbose_name_plural': 'Transaction Reports',
                'ordering': ['date_created'],
            },
        ),
    ]
